name: Engine Sidecar CI

on:
  push:
    branches:
      - main
      - develop
    paths:
      - 'packages/genx-engine/**'
      - 'services/engine-sidecar/**'
      - '.github/workflows/engine-sidecar.yml'
  pull_request:
    paths:
      - 'packages/genx-engine/**'
      - 'services/engine-sidecar/**'
      - '.github/workflows/engine-sidecar.yml'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/ecosysx-engine-sidecar

jobs:
  build-and-test:
    name: Build and Test (Node 18)
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      security-events: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: |
            packages/genx-engine/package-lock.json
            services/engine-sidecar/package-lock.json
      
      # Step 1: Build genx-engine (dependency)
      - name: Install genx-engine dependencies
        working-directory: packages/genx-engine
        run: npm ci
      
      - name: Build genx-engine
        working-directory: packages/genx-engine
        run: npm run build
      
      - name: Test genx-engine
        working-directory: packages/genx-engine
        run: npm test
        continue-on-error: false
      
      # Step 2: Build and test engine-sidecar
      - name: Install engine-sidecar dependencies
        working-directory: services/engine-sidecar
        run: npm ci
      
      - name: Test engine-sidecar
        working-directory: services/engine-sidecar
        run: npm test
        continue-on-error: false
      
      # Upload test artifacts
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: engine-sidecar-test-results
          path: |
            packages/genx-engine/coverage/
            services/engine-sidecar/*.log
          retention-days: 30
          if-no-files-found: ignore
      
      # Docker build and push (optional, only on main branch)
      - name: Set up Docker Buildx
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: docker/setup-buildx-action@v3
      
      - name: Log in to GitHub Container Registry
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract metadata for Docker
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}
      
      - name: Build and push Docker image
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: services/engine-sidecar/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64
      
      # Security scanning with Trivy
      - name: Run Trivy vulnerability scanner
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'
      
      - name: Upload Trivy results to GitHub Security
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'
      
      # Upload Docker image metadata
      - name: Upload Docker metadata
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          name: docker-metadata
          path: |
            trivy-results.sarif
          retention-days: 30
          if-no-files-found: ignore
      
      # Generate build summary
      - name: Generate build summary
        if: always()
        run: |
          echo "## Engine Sidecar Build Summary :rocket:" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Node Version**: 18" >> $GITHUB_STEP_SUMMARY
          echo "- **Build Status**: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Components Built" >> $GITHUB_STEP_SUMMARY
          echo "1. ✅ **genx-engine**: Core engine package" >> $GITHUB_STEP_SUMMARY
          echo "2. ✅ **engine-sidecar**: JSON-RPC sidecar service" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ github.event_name }}" == "push" ] && [ "${{ github.ref }}" == "refs/heads/main" ]; then
            echo "### Docker Image" >> $GITHUB_STEP_SUMMARY
            echo "- **Registry**: ${{ env.REGISTRY }}" >> $GITHUB_STEP_SUMMARY
            echo "- **Image**: ${{ env.IMAGE_NAME }}" >> $GITHUB_STEP_SUMMARY
            echo "- **Tags**: See metadata artifact" >> $GITHUB_STEP_SUMMARY
            echo "- **Security Scan**: Trivy results uploaded to Security tab" >> $GITHUB_STEP_SUMMARY
          else
            echo "### Docker Image" >> $GITHUB_STEP_SUMMARY
            echo "- **Status**: ⏭️ Skipped (only builds on main branch)" >> $GITHUB_STEP_SUMMARY
          fi

